<?php
/**
 * $Id: 449107 2011-10-09 16:06:44Z ihacklog $
 * $Revision: 449107 $
 * $Date: 2011-10-10 00:06:44 +0800 (周一, 10 十月 2011) $
 * @package Hacklog-DownloadManager
 * @encoding UTF-8 
 * @author 荒野无灯 <HuangYeWuDeng> 
 * @link http://ihacklog.com 
 * @copyright Copyright (C) 2011 荒野无灯 
 * @license http://www.gnu.org/licenses/
 */

//$etag = md5_file(__FILE__);	
$fp = fopen(__FILE__, "r");
$fstat = fstat($fp);
$fstat['atime']='';
$etag = md5(serialize($fstat)); 
fclose($fp);
	
$last_modified_time = filemtime(__FILE__);
$last_modified = gmdate('D, d M Y H:i:s', $last_modified_time) . ' GMT';
// did the browser send an if-modified-since request?
if ( isset($_SERVER['HTTP_IF_NONE_MATCH']) || isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) ) 
{
  // parse header
  $if_modified_since = preg_replace('/;.*$/', '', $_SERVER['HTTP_IF_MODIFIED_SINCE']);

  if (
  	  $if_modified_since == $last_modified ||  
  	  (isset($_SERVER['HTTP_IF_NONE_MATCH']) && trim($_SERVER['HTTP_IF_NONE_MATCH']) == $etag )
   ) 
   {
    // the browser's cache is still up to date
    header('HTTP/1.0 304 Not Modified');
    header('Cache-Control: must-revalidate');
    exit;
 	}
}

if ( !( ( ini_get( 'zlib.output_compression' ) == 'On' || ini_get( 'zlib.output_compression_level' ) > 0 ) || ini_get( 'output_handler' ) == 'ob_gzhandler' )  && extension_loaded( 'zlib' ) )
{	
	ob_start( 'ob_gzhandler' );	
} 
header("Content-type: text/javascript");
header('Cache-Control: must-revalidate');
$offset = 3600 *24  * 7;
$expire_str = "Expires: " . gmdate("D, d M Y H:i:s", time() + $offset) . " GMT";
header($expire_str);
header('Last-Modified: ' . $last_modified);
header("Etag: $etag"); 
?>

(function($){
  $.extend($.infinitescroll.prototype,{
  
  _setup_twitter: function infscr_setup_twitter () {
    var opts = this.options,
      instance = this;
      
    // Bind nextSelector link to retrieve
    $(opts.nextSelector).click(function(e) {
      if (e.which == 1 && !e.metaKey && !e.shiftKey) {
        e.preventDefault();
        instance.retrieve();
      }
    });
    
    // Define loadingStart to never hide pager
    instance.options.loading.start = function (opts) {
      opts.loading.msg
        .appendTo(opts.loading.selector)
        .show(opts.loading.speed, function () {
                  beginAjax(opts);
            });
    }
  }
  
});
})(jQuery);

<?php if(extension_loaded('zlib')) {ob_end_flush();} ?>